#######################【spring-boot基础配置】##################
server.port=8082
spring.application.name=kafka-study
#######################【log日志配置】################################
# 日志配制文件路径
logging.config=classpath:config/logback-spring.xml
# 日志的级别
logging.level.root=info




#######################【kafka集群配置】#####################
spring.kafka.bootstrap-servers=xxxx
#######################【初始化生产者配置】############################
# 重试次数
spring.kafka.producer.retries=3
# 应答级别：多个分区副本备份完成时间向生产者发送ack确认（可选0、1、all/-1）
spring.kafka.producer.acks=all
# 批量大小
spring.kafka.producer.batch-size=16384
# 提交延时
spring.kafka.producer.properties.linger.ms=5000
# 当生产者端积累的消息达到batch-size或者接收消息linger.ms后，生产者就会将消息提交到kafka
# linger.ms=0表示每接收一条消息就提交到kafka，这时候batch-size其实就没用了

# 生产者端缓冲区大小
spring.kafka.producer.buffer-memory=33554432
# kafka提供的序列化和反序列化
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# 自定义分区器
# spring.kafka.producer.properties.partitioner.class=com.felix.kafka.producer.CustomizePartitioner
# 加事务前缀
spring.kafka.producer.transaction-id-prefix=tx_
########################【初始化消费者】#########################################
# 默认的消费组ID
spring.kafka.consumer.properties.group.id=monitorSystem
# 是否自动提交offset
spring.kafka.consumer.enable-auto-commit=true
# 提交offset延时（接受到消息后多久提交offset）
spring.kafka.consumer.auto-commit-interval.ms=1000
# 当kafka中没有初始化或offset超出范围时将自动重置offset
# earliest：重置为分区中最小的offset；
# latest:重置为分区中最新的offset（消费分区中新产生的数据）
# none：只要有一个分区不存在已提交的offset，就抛出异常
spring.kafka.consumer.auto-offset-reset=earliest
# 消费会话超时时间（超过这个时间，consumer没有发送心跳，就会出发Rebalance操作）
spring.kafka.consumer.properties.session.timeout.ms=120000
# 消费请求超时时间
spring.kafka.consumer.properties.request.timeout.ms=180000
# kafka提供的序列化和反序列化类
spring.kafka.consumer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# 消费者端监听的topic不存在时，项目启动会报错（关掉）
spring.kafka.listener.missing-topics-fatal=false
# 设置批量消费
#spring.kafka.listener.type=batch
# 批量消费每次最多消费多少条消息
#spring.kafka.consumer.max-poll-records=50